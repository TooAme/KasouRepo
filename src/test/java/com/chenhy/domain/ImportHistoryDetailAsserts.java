package com.chenhy.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ImportHistoryDetailAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImportHistoryDetailAllPropertiesEquals(ImportHistoryDetail expected, ImportHistoryDetail actual) {
        assertImportHistoryDetailAutoGeneratedPropertiesEquals(expected, actual);
        assertImportHistoryDetailAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImportHistoryDetailAllUpdatablePropertiesEquals(ImportHistoryDetail expected, ImportHistoryDetail actual) {
        assertImportHistoryDetailUpdatableFieldsEquals(expected, actual);
        assertImportHistoryDetailUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImportHistoryDetailAutoGeneratedPropertiesEquals(ImportHistoryDetail expected, ImportHistoryDetail actual) {
        assertThat(actual)
            .as("Verify ImportHistoryDetail auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImportHistoryDetailUpdatableFieldsEquals(ImportHistoryDetail expected, ImportHistoryDetail actual) {
        assertThat(actual)
            .as("Verify ImportHistoryDetail relevant properties")
            .satisfies(a -> assertThat(a.getUuid()).as("check uuid").isEqualTo(expected.getUuid()))
            .satisfies(a -> assertThat(a.getTcihdPid()).as("check tcihdPid").isEqualTo(expected.getTcihdPid()))
            .satisfies(a -> assertThat(a.getTcihdLine()).as("check tcihdLine").isEqualTo(expected.getTcihdLine()))
            .satisfies(a -> assertThat(a.getTcihdError()).as("check tcihdError").isEqualTo(expected.getTcihdError()))
            .satisfies(a -> assertThat(a.getCreateBy()).as("check createBy").isEqualTo(expected.getCreateBy()))
            .satisfies(a -> assertThat(a.getCreateTime()).as("check createTime").isEqualTo(expected.getCreateTime()))
            .satisfies(a -> assertThat(a.getUpdateBy()).as("check updateBy").isEqualTo(expected.getUpdateBy()))
            .satisfies(a -> assertThat(a.getUpdateTime()).as("check updateTime").isEqualTo(expected.getUpdateTime()))
            .satisfies(a -> assertThat(a.getDelFlag()).as("check delFlag").isEqualTo(expected.getDelFlag()))
            .satisfies(a -> assertThat(a.getRemark()).as("check remark").isEqualTo(expected.getRemark()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertImportHistoryDetailUpdatableRelationshipsEquals(ImportHistoryDetail expected, ImportHistoryDetail actual) {
        // empty method
    }
}
